## create and save hex sticker
ggplot(h1, aes(x, y)) +
geom_polygon(fill = "#000000", size = 1, colour = "#000000") +
#geom_polygon(data = h2, fill = "#006677", size = 0) +
annotate("text", 0, -.175, label = "tidyversity", size = 6,
colour = "#ffffff", family = "Consolas") +
hexagon::theme_hexagon() +
theme(plot.margin = margin(-6, -6, -9, -8, unit = "pt")) #+
## create and save hex sticker
ggplot(h1, aes(x, y)) +
#geom_polygon(fill = "#000000", size = 1, colour = "#000000") +
geom_polygon(data = h2, fill = "#006677", size = 0) + #hex fill
annotate("text", 0, -.175, label = "tidyversity", size = 6,
colour = "#ffffff", family = "Consolas") +
hexagon::theme_hexagon() +
theme(plot.margin = margin(-6, -6, -9, -8, unit = "pt")) #+
.libPaths("F:/R")
library(ggflags)
library(ITNr)
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.1)
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
library(countrycode)
library(magrittr)
nb3$country<-countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
## create and save hex sticker
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
library(ggnetwork)
## create and save hex sticker
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
install.packages("hexSticker")
library(hexSticker)
sticker(R2, package="ITNr", p_size=11, p_color = "black",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="black", filename="man/figures/logo.png")
R2
?sticker
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.2)
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
tiff('test_3.tiff', units="in", width=6, height=5, res=300)
R2
dev.off()
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.3)
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
tiff('test_3.tiff', units="in", width=6, height=5, res=300)
#insert ggplot code
R2
dev.off()
library(igraph)
df<-get.data.frame(ITN2b)
View(df)
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.31)
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
tiff('test_3.tiff', units="in", width=6, height=5, res=300)
#insert ggplot code
R2
dev.off()
View(df)
H<-decompose(ITN2b, mode = "strong",# max.comps = NA,
min.vertices = 3)
H<-decompose(ITN2b,# mode = "strong",# max.comps = NA,
min.vertices = 3)
H2<-H[[1]]
plot(H2)
ITN2b<-H2
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
tiff('test_3.tiff', units="in", width=6, height=5, res=300)
#insert ggplot code
R2
dev.off()
sticker(R2, package="ITNr", p_size=11, p_color = "black",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="black", filename="man/figures/logo.png")
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.45)
H<-decompose(ITN2b,# mode = "strong",# max.comps = NA,
min.vertices = 3)
H2<-H[[1]]
ITN2b<-H2
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
tiff('test_3.tiff', units="in", width=6, height=5, res=300)
#insert ggplot code
R2
dev.off()
df<-get.data.frame(ITN2b)
View(H)
View(df)
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.55)
H<-decompose(ITN2b,# mode = "strong",# max.comps = NA,
min.vertices = 3)
H2<-H[[1]]
ITN2b<-H2
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country)) +
geom_edges(size = 0.5,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
tiff('test_3.tiff', units="in", width=6, height=5, res=300)
#insert ggplot code
R2
dev.off()
sticker(R2, package="ITNr",
p_size=11, p_color = "black",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="black",
filename="man/figures/logo.png")
?sticker
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country,size=0.3)) +
geom_edges(size = 0.2,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
sticker(R2, package="ITNr",
p_size=11, p_color = "red",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="black",
filename="man/figures/logo.png")
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country,size=0.2)) +
geom_edges(size = 0.2,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
sticker(R2, package="ITNr",
p_size=12, p_color = "red",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
ITN2b<-WITSclean("DataJobID-1373690_1373690_ELE14.csv",2016,
TRUE,0.66)
H<-decompose(ITN2b,# mode = "strong",# max.comps = NA,
min.vertices = 3)
H2<-H[[1]]
ITN2b<-H2
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country,size=0.2)) +
geom_edges(size = 0.2,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
sticker(R2, package="ITNr",
p_size=12, p_color = "red",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country,size=0.2)) +
geom_edges(size = 0.2,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
sticker(R2, package="ITNr",
p_size=12, p_color = "red",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
nb3<-intergraph::asNetwork(ITN2b)
nb3<-ggnetwork::ggnetwork(nb3)
nb3$country<-countrycode::countrycode(as.character(nb3$vertex.names),
"iso3c","iso2c")
nb3$country%<>%tolower()
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country,size=0.2)) +
geom_edges(size = 0.2,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
sticker(R2, package="ITNr",
p_size=12, p_color = "red",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
R2<-ggplot(nb3, aes(x = x, y = y, xend = xend, yend = yend,
country=country,size=0.01)) +
geom_edges(size = 0.2,color="grey") +
geom_flag() +
guides(colour=FALSE,size=FALSE)+
theme_blank()
sticker(R2, package="ITNr",
p_size=12, p_color = "red",p_y=1.55,
s_x=1, s_y=0.85,
s_width=1.3, s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
sticker(R2, package="ITNr",
p_size=14, p_color = "red",
p_y=1.55,
s_x=1.2,#1,
s_y=1,#0.85,
s_width=1.3,
s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
sticker(R2,
package="ITNr",
p_size=14, p_color = "red",
p_y=1.55,
s_x=1,
s_y=1,#0.85,
s_width=1.3,
s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
sticker(R2,
package="ITNr",
p_size=14, p_color = "red",
p_y=1.55,
s_x=1,
s_y=0.95,#0.85,
s_width=1.3,
s_height=1.3,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
sticker(R2,
package="ITNr",
p_size=14, p_color = "red",
p_y=1.55,
s_x=1,
s_y=0.95,#0.85,
s_width=1.25,
s_height=1.25,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
sticker(R2,
package="ITNr",
p_size=15, p_color = "red",
p_y=1.55,
s_x=1,
s_y=0.95,#0.85,
s_width=1.2,
s_height=1.2,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
sticker(R2,
package="ITNr",
p_size=15, p_color = "red",
p_y=1.55,
s_x=1,
s_y=0.95,#0.85,
s_width=1.18,
s_height=1.18,
h_fill="white", h_color="red",
filename="man/figures/logo.png")
library(ITNr)
library(ITNr)
library(ITNr)
devtools::release()
library(ITNr)
library(ITNr)
devtools::release()
library(ITNr)
devtools::release()
install.packages(c("digest", "git2r", "mime", "openssl", "R6", "rstudioapi"))
devtools::release()
cap_lat_lon<-base::get("cap_lat_lon")
NAME<-igraph::V(gs)$name
library(ITNr)
data("ELEnet16")
gs<-ELEnet16
NAME<-igraph::V(gs)$name
LATLONGlist<-list()
for (i in 1:length(NAME)){
Hcode<-NAME[[i]]
FILTERgeo<-dplyr::filter(cap_lat_lon,cap_lat_lon$Country.Code==Hcode)
LAT<-isEmpty(FILTERgeo$Latitude[1])
LONG<-isEmpty(FILTERgeo$Longitude[1])
LL<-data.frame(LAT,LONG)
colnames(LL)<-c("LAT","LONG")
LATLONGlist[[i]]<-LL
}
LATLONGdf<-plyr::ldply(LATLONGlist,data.frame)
rownames(LATLONGdf)<-NAME
LATLONGdf$name<-rownames(LATLONGdf)
DISdata<-LATLONGdf
LATLONGdf[is.na(LATLONGdf)]<-"na"
DISdata2<-dplyr::filter(LATLONGdf,LAT!="na")
NOll<-dplyr::filter(LATLONGdf,LATLONGdf$LAT=="na")
NOllnode<-NOll$name
gs2<-igraph::delete_vertices(gs, NOllnode)
gnet<-intergraph::asNetwork(gs2)
network::set.vertex.attribute(gnet,"lat",as.numeric(DISdata2$LAT))
network::set.vertex.attribute(gnet,"lon",as.numeric(DISdata2$LONG))
world1 <- ggplot2::fortify(maps::map("world", plot = FALSE, fill = TRUE))
world <- ggplot2::ggplot(world1,ggplot2:: aes(x = world1$long, y = world1$lat)) +
ggplot2::geom_polygon(ggplot2::aes(group = world1$group),
color = "grey65",#country border colour
fill = "#f9f9f9", size = 0.2)
GGally::ggnetworkmap(world, gnet,size = 2,
node.color = "blue",
segment.color = "#AA555555")
GGally::ggnetworkmap(world)
GGally::ggnetworkmap(world, gnet)
GGally::ggnetworkmap(world, network::gnet)
gnet<-network::as.network(gnet)
network::set.vertex.attribute(gnet,"lat",as.numeric(DISdata2$LAT))
network::set.vertex.attribute(gnet,"lon",as.numeric(DISdata2$LONG))
world1 <- ggplot2::fortify(maps::map("world", plot = FALSE, fill = TRUE))
world <- ggplot2::ggplot(world1,ggplot2:: aes(x = world1$long, y = world1$lat)) +
ggplot2::geom_polygon(ggplot2::aes(group = world1$group),
color = "grey65",#country border colour
fill = "#f9f9f9", size = 0.2)
GGally::ggnetworkmap(world, gnet,size = 2,
node.color = "blue",
segment.color = "#AA555555")
library(ITNr)
library(ITNr)
library(ITNr)
library(ITNr)
library(ITNr)
library(ITNr)
?reorder_df
library(ITNr)
library(ITNr)
library(ITNr)
library(ITNr)
library(ITNr)
?as.data.frame
?as_data_frame
library(ITNr)
library(ITNr)
gs<-erdos.renyi.game(50,0.05,directed = TRUE)
library(igraph)
gs<-erdos.renyi.game(50,0.05,directed = TRUE)
E(gs)$weight<-runif(ecount(ITN), 0, 1)
E(gs)$weight<-runif(ecount(gs), 0, 1)
V(gs)$name<-1:vcount(gs)
type<-"directed"
VERT<-igraph::get.data.frame(gs,"vertices")
MINEL<-min(igraph::E(gs)$weight)
igraph::E(gs)$weight<-igraph::E(gs)$weight/MINEL
CENT<-ITNcentrality(gs)
DF<-merge(VERT,CENT,by.x="name",by.y="NAMES")
library(ITNr)
VERT<-igraph::get.data.frame(gs,"vertices")
MINEL<-min(igraph::E(gs)$weight)
igraph::E(gs)$weight<-igraph::E(gs)$weight/MINEL
CENT<-ITNcentrality(gs)
DF<-merge(VERT,CENT,by.x="name",by.y="NAMES")
DF<-dplyr::filter(DF,DF$Binary.Degree.All!=0)
df1<-igraph::get.data.frame(gs)
RESlist<-list()
for (i in 1:length(DF$name)){
ego_node<-DF$name[[i]]
ego_node<-as.character(ego_node)
df1a<-dplyr::filter(df1,df1$from==ego_node)
df1b<-dplyr::filter(df1,df1$to==ego_node)
df2<-rbind(df1a,df1b)
neigh<-igraph::graph.data.frame(df2)
INel<-igraph::incident_edges(neigh, ego_node, mode = "in")
OUTel<-igraph::incident_edges(neigh, ego_node, mode = "out")
neighOUT<-igraph::delete.edges(neigh,INel[[1]])
neighIN<-igraph::delete.edges(neigh,OUTel[[1]])
igraph::V(neighOUT)$degree<-igraph::degree(neighOUT)
igraph::V(neighIN)$degree<-igraph::degree(neighIN)
neighOUT<-igraph::delete.vertices(neighOUT,
igraph::V(neighOUT)$name[
igraph::V(neighOUT)$degree == 0
])
neighIN<-igraph::delete.vertices(neighIN,
igraph::V(neighIN)$name[
igraph::V(neighIN)$degree == 0
])
STRENGTHnode<-dplyr::filter(DF,DF$name==DF$name[[i]])
STRENGTHneighbour<-DF[DF$name%in%igraph::V(neigh)$name,]
STRENGTHneighbourOUT<-DF[DF$name%in%igraph::V(neighOUT)$name,]
STRENGTHneighbourIN<-DF[DF$name%in%igraph::V(neighIN)$name,]
OUTstrength<-dplyr::filter(STRENGTHneighbourOUT,
STRENGTHneighbourOUT$Weighted.Out.Degree>=
STRENGTHnode$Weighted.Out.Degree)
OUTlist<-unique(c(OUTstrength$name,ego_node))
OUTlist<-as.character(OUTlist)
if (igraph::vcount(neighOUT)>0){
filter_out<-igraph::induced_subgraph(neighOUT,vids=OUTlist)
sigma_out<-sum(igraph::E(filter_out)$weight)
} else sigma_out<-0
INstrength<-dplyr::filter(STRENGTHneighbourIN,
STRENGTHneighbourIN$Weighted.In.Degree>=
STRENGTHnode$Weighted.In.Degree)
INlist<-unique(c(INstrength$name,ego_node))
INlist<-as.character(INlist)
if (igraph::vcount(neighIN)>0){
filter_in<-igraph::induced_subgraph(neighIN,vids=INlist)
sigma_in<-sum(igraph::E(filter_in)$weight)
} else sigma_in<-0
sigma_all<-sigma_in+sigma_out
RESdf<-data.frame(name=ego_node,
sigma_in=sigma_in,
sigma_out=sigma_out,
sigma_all=sigma_all)
RESlist[[i]]<-RESdf
}
RESULT<-lapply(RESlist,data.frame)#purrr::map_df(RESlist,data.frame)
RESULT<-lapply(RESlist,as.data.frame)#purrr::map_df(RESlist,data.frame)
RESULT<-purrr::map_df(RESlist,data.frame)
warnings()
View(RESULT)
RESULT
str(RESULT)
.libPaths("F:/R")
library(ITNr)
library(ITNr)
.libPaths("F:/R")
library(ITNr)
.libPaths("F:/R")
library(ITNr)
data("ELEnet16")
G1<-ELEnet16
AggregatesList<-c("USA","CHN")
V(G1)$name %in% AggregatesList
igraph::V(G1)$name %in% AggregatesList
DEL_LIST<-subset(igraph::V(G1)$name,
igraph::V(G1)$name %in% AggregatesList)
DEL_LIST
library(ITNr)
library(ITNr)
library(ITNr)
.libPaths("F:/R")
library(ITNr)
.libPaths("F:/R")
library(ITNr)
library(ITNr)
library(ITNr)
