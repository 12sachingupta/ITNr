LIA_IND<-dplyr::group_by(dplyr::select(LIA_DF,CountryBROKER),CountryBROKER)
LIA_IND<-unique(add_tally(LIA_IND))
colnames(LIA_IND)<-c("name","Liaison")
MERGE1<-merge(GROUP_ID,COOR_IND,by.all="name",all.x=TRUE)
View(MERGE1)
MERGE2<-merge(MERGE1,REP_IND,by.all="name",all.x=TRUE)
View(MERGE2)
MERGE1<-merge(GROUP_ID,COOR_IND,by.all="name",all.x=TRUE)
MERGE2<-merge(MERGE1,REP_IND,by.all="name",all.x=TRUE)
MERGE3<-merge(MERGE2,GATE_IND,by.all="name",all.x=TRUE)
MERGE4<-merge(MERGE3,ITIN_IND,by.all="name",all.x=TRUE)
TOTAL_DF<-merge(MERGE4,LIA_IND,by.all="name",all.x=TRUE)
TOTAL_DF[is.na(TOTAL_DF)]<-0
View(TOTAL_DF)
TOTAL_DF$Total<-rowSums(TOTAL_DF)
TOTAL_DF$Total<-rowSums(TOTAL_DF[,3:7])
View(TOTAL_DF)
View(TOTAL_DF)
br <- matrix(.C("brokerage_R", as.double(g), as.integer(N),
as.integer(m), as.integer(icl), brok = as.double(br),
PACKAGE = "sna", NAOK = TRUE)$brok, N, 5)
View(br)
br <- cbind(br, apply(br, 1, sum))
gbr <- apply(br, 2, sum)
gbr
head(br)
colnames(TOTAL_DF)
br<-select(TOTAL_DF,Coordinator,Consultant,Representative,Gatekeeper,Liaison)
br<-as.matrix(br)
br<-select(TOTAL_DF,Coordinator,Consultant,Representative,Gatekeeper,Liaison,Total)
br<-as.matrix(br)
N<-vcount(gs)
N<-vcount(gs)
m<-ecount(gs)
cl<-vertex_attr(gs,attrname)
classes<-unique(cl)
icl<-match(cl,classes)
br<-select(TOTAL_DF,Coordinator,Consultant,
Representative,Gatekeeper,Liaison,Total)
br<-as.matrix(br)
gbr<-apply(br,2,sum)
classes
d<-m/(N*(N-1))
clid<-unique(cl)         #Count the class memberships
n<-vector()
for(i in clid)
n<-c(n,sum(cl==i))
n<-as.double(n)          #This shouldn't be needed, but R will generate
N<-as.double(N)          #integer overflows unless we coerce to double!
ebr<-matrix(0,length(clid),6)
vbr<-matrix(0,length(clid),6)
for(i in 1:length(clid)){  #Compute moments by broker's class
#Type 1: Within-group (wI)
ebr[i,1]<-d^2*(1-d)*(n[i]-1)*(n[i]-2)
vbr[i,1]<-ebr[i,1]*(1-d^2*(1-d))+2*(n[i]-1)*(n[i]-2)*(n[i]-3)*d^3*(1-d)^3
#Type 2: Itinerant (WO)
ebr[i,2]<-d^2*(1-d)*sum(n[-i]*(n[-i]-1))
vbr[i,2]<-ebr[i,2]*(1-d^2*(1-d))+ 2*sum(n[-i]*(n[-i]-1)*(n[-i]-2))*d^3*(1-d)^3
#Type 3: Representative (bIO)
ebr[i,3]<-d^2*(1-d)*(N-n[i])*(n[i]-1)
vbr[i,3]<-ebr[i,3]*(1-d^2*(1-d))+ 2*((n[i]-1)*choose(N-n[i],2)+(N-n[i])*choose(n[i]-1,2))*d^3*(1-d)^3
#Type 4: Gatekeeping (bOI)
ebr[i,4]<-ebr[i,3]
vbr[i,4]<-vbr[i,3]
#Type 5: Liason (bO)
ebr[i,5]<-d^2*(1-d)*(sum((n[-i])%o%(n[-i]))-sum(n[-i]^2))
vbr[i,5]<-ebr[i,5]*(1-d^2*(1-d))+ 4*sum(n[-i]*choose(N-n[-i]-n[i],2)*d^3*(1-d)^3)
#Total
ebr[i,6]<-d^2*(1-d)*(N-1)*(N-2)
vbr[i,6]<-ebr[i,6]*(1-d^2*(1-d))+2*(N-1)*(N-2)*(N-3)*d^3*(1-d)^3
}
br.exp<-vector()
br.sd<-vector()
for(i in 1:N){
temp<-match(cl[i],clid)
br.exp<-rbind(br.exp,ebr[temp,])
br.sd<-rbind(br.sd,sqrt(vbr[temp,]))
}
br.z<-(br-br.exp)/br.sd
egbr<-vector()                     #Global expections/variances
vgbr<-vector()
#Type 1: Within-group (wI)
egbr[1]<-d^2*(1-d)*sum(n*(n-1)*(n-2))
vgbr[1]<-egbr[1]*(1-d^2*(1-d))+
sum(n*(n-1)*(n-2)*(((4*n-10)*d^3*(1-d)^3)-(4*(n-3)*d^4*(1-d)^2)+
((n-3)*d^5*(1-d))))
#Type 2: Itinerant (WO)
egbr[2]<-d^2*(1-d)*sum(n*(N-n)*(n-1))
vgbr[2]<-egbr[2]*(1-d^2*(1-d))+
(sum(outer(n,n,function(x,y){
x*y*(x-1)*(((2*x+2*y-6)*d^3*(1-d)^3)+
((N-x-1)*d^5*(1-d)))}
)) -
sum(n*n*(n-1)*(((4*n-6)*d^3*(1-d)^3)+((N-n-1)*d^5*(1-d)))))
#Type 3: Representative (bIO)
egbr[3]<-d^2*(1-d)*sum(n*(N-n)*(n-1))
vgbr[3]<-egbr[3]*(1-d^2*(1-d))+
sum(n*(N-n)*(n-1)*(((N-3)*d^3*(1-d)^3)+((n-2)*d^5*(1-d))))
#Type 4: Gatekeeping (bOI)
egbr[4]<-egbr[3]
vgbr[4]<-vgbr[3]
#Type 5: Liason (bO)
egbr[5]<- d^2*(1-d)*(sum(outer(n,n,function(x,y){
x*y*(N-x-y)}
))-sum(n*n*(N-2*n)))
vgbr[5]<-egbr[5]*(1-d^2*(1-d))
for(i in 1:length(n))
for(j in 1:length(n))
for(k in 1:length(n))
if((i!=j)&&(j!=k)&&(i!=k))
vgbr[5]<-vgbr[5] + n[i]*n[j]*n[k] * ((4*(N-n[j])-2*(n[i]+n[k]+1))*d^3*(1-d)^3-(4*(N-n[k])-2*(n[i]+n[j]+1))*d^4*(1-d)^2+(N-(n[i]+n[k]+1))*d^5*(1-d))
#Total
egbr[6]<-d^2*(1-d)*N*(N-1)*(N-2)
vgbr[6]<-egbr[6]*(1-d^2*(1-d))+ N*(N-1)*(N-2)*
(((4*N-10)*d^3*(1-d)^3)-(4*(N-3)*d^4*(1-d)^2)+((N-3)*d^5*(1-d)))
#Return the results
br.nam<-c("w_I",#coordinator
"w_O",#Consultant
"b_IO",#Representative
"b_OI",#Gatekeeper
"b_O", #Liaison
"t")
colnames(br)<-br.nam
colnames(br)<-br.nam
colnames(br.exp)<-br.nam
colnames(br.sd)<-br.nam
colnames(br.z)<-br.nam
names(gbr)<-br.nam
names(egbr)<-br.nam
names(vgbr)<-br.nam
colnames(ebr)<-br.nam
rownames(ebr)<-clid
colnames(vbr)<-br.nam
rownames(vbr)<-clid
out<-list(raw.nli=br,exp.nli=br.exp,sd.nli=br.sd,z.nli=br.z,raw.gli=gbr, exp.gli=egbr,sd.gli=sqrt(vgbr),z.gli=(gbr-egbr)/sqrt(vgbr),exp.grp=ebr, sd.grp=sqrt(vbr),cl=cl,clid=clid,n=n,N=N)
View(out)
vertex_attr(gs,"name")
class(out)<-"brokerage"
out
cl
clid
n
N
sum(n)
class(out)
rep(LETTERS[1:5],25)
rep(LETTERS[1:5],15)
library(ITNr)
data("ELEnet16")
gs<-ELEnet16
attrname<-"regionNAME"
MM<-mixing_matrix_igraph(gs,
attrname)
source("R/mixing_matrix_igraph_function.R")
MM<-mixing_matrix_igraph(gs,
attrname)
source("R/mixing_matrix_igraph_function.R")
source("R/mixing_matrix_igraph_function.R")
MM<-mixing_matrix_igraph(gs,
attrname)
source("R/mixing_matrix_igraph_function.R")
MM<-mixing_matrix_igraph(gs,
attrname)
#(External-Internal)/External+Internal
MM1<-MM
diag(MM1)<-0
GRAPH_INTERNAL<-sum(diag(MM))
GRAPH_EXTERNAL<-sum(rowSums(MM1))
graph_EI<-(GRAPH_EXTERNAL - GRAPH_INTERNAL)/(GRAPH_EXTERNAL + GRAPH_INTERNAL)
num_groups<-dim(MM)[1]
group_name<-colnames(MM)
INTERNAL_LIST<-diag(MM)
RS<-rowSums(MM1)
CS<-colSums(MM1)
GROUP_DF_list<-list()
for (i in 1:num_groups){
name<-group_name[i]
INTER<-INTERNAL_LIST[i]
EXTER<-RS[i]+CS[i]
EIG<-(EXTER-INTER)/(EXTER+INTER)
GROUP_DF<-data.frame(group=name,
external.ties=EXTER,
internal.ties=INTER,
group.ei=EIG)
GROUP_DF_list[[i]]<-GROUP_DF
}
group_EI<-suppressWarnings(map_df(GROUP_DF_list,data.frame))
group_EI<-suppressWarnings(purrr::map_df(GROUP_DF_list,data.frame))
group_EI<-round_df(group_EI,4)
View(group_EI)
data("ELEnet16")
gs<-ELEnet16
attrname<-"regionNAME"
FULL_CENT<-data.frame(name=igraph::V(gs)$name,
out.degree=igraph::degree(gs,mode = "out"),
in.degree=igraph::degree(gs,mode = "in"),
total.degree=igraph::degree(gs,mode = "total"))
GROUP<-igraph::get.vertex.attribute(gs,attrname)
GROUP<-unique(GROUP)
num_group<-length(GROUP)
GROUP_MEM<-igraph::get.data.frame(gs,what="vertices")
H<-c("name",attrname)
GROUP_MEM<-GROUP_MEM[,H]
colnames(GROUP_MEM)<-c("name","group")
GROUP_CENT_LIST<-list()
for (i in 1:num_group){
G<-GROUP[[i]]
GM<-dplyr::filter(GROUP_MEM,group==G)
SUB<-igraph::induced_subgraph(gs,GM$name)
GC<-data.frame(name=igraph::V(SUB)$name,
group.out.degree=igraph::degree(SUB,mode = "out"),
group.in.degree=igraph::degree(SUB,mode = "in"),
group.total.degree=igraph::degree(SUB,mode = "total"),
group=rep(G,vcount(SUB)))
GROUP_CENT_LIST[[i]]<-GC
}
GROUP_CENT_LIST<-list()
for (i in 1:num_group){
G<-GROUP[[i]]
GM<-dplyr::filter(GROUP_MEM,group==G)
SUB<-igraph::induced_subgraph(gs,GM$name)
GC<-data.frame(name=igraph::V(SUB)$name,
group.out.degree=igraph::degree(SUB,mode = "out"),
group.in.degree=igraph::degree(SUB,mode = "in"),
group.total.degree=igraph::degree(SUB,mode = "total"),
group=rep(G,igraph::vcount(SUB)))
GROUP_CENT_LIST[[i]]<-GC
}
GROUP_CENT_DF<-suppressWarnings(purrr::map_df(GROUP_CENT_LIST,data.frame))
FULL_DF<-merge(FULL_CENT,GROUP_CENT_DF,by="name")
FULL_DF$Internal<-FULL_DF$group.total.degree
FULL_DF$External<-FULL_DF$total.degree-FULL_DF$group.total.degree
FULL_DF$EI<-(FULL_DF$External-FULL_DF$Internal)/FULL_DF$total.degree
View(FULL_DF)
MM<-mixing_matrix_igraph(gs,
attrname)
source("R/mixing_matrix_igraph_function.R")
MM<-mixing_matrix_igraph(gs,
attrname)
#(External-Internal)/External+Internal
MM1<-MM
diag(MM1)<-0
INT<-diag(MM)
#(External-Internal)/External+Internal
MM1<-MM
diag(MM1)<-0
EXT<-rowSums(MM1)
denominator<-EXT+INT
numerator<-EXT-INT
EI_NET<-numerator/denominator
EI_NET<-round(EI_NET,4)
INT<-sum(diag(MM))
#(External-Internal)/External+Internal
MM1<-MM
diag(MM1)<-0
EXT<-rowSums(MM1)
denominator<-EXT+INT
numerator<-EXT-INT
EI_NET<-numerator/denominator
EXT<-rowSums(MM1)
EXT<-sum(rowSums(MM1))
denominator<-EXT+INT
numerator<-EXT-INT
EI_NET<-numerator/denominator
EI_NET<-round(EI_NET,4)
library(ITNr)
??add_tally
library(ITNr)
library(ITNr)
library(ITNr)
data("ELEnet16")
gs<-ELEnet16
attrname<-"regionNAME"
library(dplyr)
H<-c("name",attrname)
DF<-igraph::get.data.frame(gs,what="vertices")
DF1<-DF[,H]
colnames(DF1)<-c("name","attr")
type<-igraph::is_directed(gs)
is.null(igraph::E(gs)$weight)
if (is.null(igraph::E(gs)$weight)==TRUE){
igraph::E(gs)$weight<-rep(igraph::ecount(gs),1)
}else{igraph::E(gs)$weight<-igraph::E(gs)$weight}
EL<-igraph::get.data.frame(gs,what="edges")
PIC<-c("to","from","weight")
EL<-dplyr::select(EL,PIC)
EL2<-EL
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,"to","from"),
length(EL3$from))
View(EL3a)
length(from)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,"to","from"),
length(from))
View(EL3a)
colnames(EL3a)<-c("to","from","weight")
View(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,to,from),
length(rom))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,to,from),
length(from))
View(EL3a)
?summarise
?group_by
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,.EL3$to,.EL3$from),
length(.EL3from))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,.EL3$to,.EL3$from),
length(.EL3$from))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$to,EL3$from),
length(EL3$from))
View(EL3a)
View(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$to,EL3$from),
length(from))
View(EL3)
View(EL3a)
EL<-igraph::get.data.frame(gs,what="edges")
View(EL)
EL<-igraph::get.data.frame(gs,what="edges")
PIC<-c("from","to","weight")
EL<-dplyr::select(EL,PIC)
EL2<-EL
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
View(EL3)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(from))
View(EL3a)
?length
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(El[,3]))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(EL3[,3]))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(EL3[,2]))
View(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(from))
View(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(to))
View(EL3a)
?group_by
EL3a1<-dplyr::group_by(EL3,EL3$from,EL3$to)
View(EL3a1)
EL3<-EL2[,1:2]
EL3a1<-dplyr::group_by(EL3,EL3$from,EL3$to)
View(EL3a1)
EL3<-EL2[,1:2]
EL3a1<-dplyr::group_by(EL3,from,to)
View(EL3a1)
EL3a1<-dplyr::group_by(EL3,"from","to")
View(EL3a1)
EL3a1<-dplyr::group_by(EL3,EL3$from,EL3$to)
View(ELEnet16)
View(EL3a1)
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
EL3a1<-dplyr::group_by(EL3,EL3$from,EL3$to)
EL3a<-dplyr::summarise(
EL3a1,
length(to))
View(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(to))
EL3<-EL2[,1:2]
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(to))
EL3<-EL2[,1:2]
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(to))
View(EL3a)
rm(EL3a1)
rm(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,EL3$from,EL3$to),
length(to))
View(EL3a)
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,"from","to"),
length(to))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,from,to),
length(to))
EL3<-EL2[,1:2]
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,from,to),
length(to))
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,from,to),
length(from))
rm(EL3)
rm(EL3a)
EL<-igraph::get.data.frame(gs,what="edges")
PIC<-c("from","to","weight")
EL<-dplyr::select(EL,PIC)
EL2<-EL
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,from,to),
length(from))
View(EL3a)
EL<-igraph::get.data.frame(gs,what="edges")
PIC<-c("from","to","weight")
EL<-dplyr::select(EL,PIC)
EL2<-EL
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
R<-c("from","to")
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,R),
length(from))
EL<-igraph::get.data.frame(gs,what="edges")
PIC<-c("from","to","weight")
EL<-dplyr::select(EL,PIC)
EL2<-EL
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
R<-c("from","to")
EL3a<-dplyr::summarise(
dplyr::group_by(EL3,R),
length(from))
EL3<-EL2[,1:2]
EL3a<-dplyr::summarise(
dplyr::group_by(EL3, rlang::.data$from, rlang::.data$to),
length(from))
?globalVariables
globalVariables(c("to", "from"))
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
?with
EL3b<-add_count(EL3)
View(EL3b)
View(EL3)
EL3<-EL2[,1:2]
EL<-igraph::get.data.frame(gs,what="edges")
PIC<-c("from","to","weight")
EL<-dplyr::select(EL,PIC)
EL2<-EL
EL2$to <- DF1$attr[match(EL2$to, DF1$name)]
EL2$from <- DF1$attr[match(EL2$from, DF1$name)]
EL3<-EL2[,1:2]
View(EL3)
EL3b<-add_count(EL3)
View(EL3b)
EL3b<-add_count(EL3,from)
View(EL3b)
EL3b<-add_count(EL3,c(from,to))
EL3b<-add_count(EL3,c("from","to"))
EL3b<-add_tally(EL3)
View(EL3b)
H<-c("from","to")
EL3c<-plyr::ddply(EL3,H,nrow)
View(EL3c)
myfiles<-list.files("C:\\Users\\ms3453n\\OneDrive - University of Greenwich\\GitHub\\ITNr\\R", full.names = TRUE)
purrr_res<-Filter(function(file) any(grepl("purrr::", readLines(file, warn = FALSE))),
myfiles)%>%as_tibble()
write_csv(purrr_res,"purrr_resITNR.csv")
readr::write_csv(purrr_res,"purrr_resITNR.csv")
EL3c<-plyr::ddply(EL3,HR,nrow)
HR<-c("from","to")
EL3c<-plyr::ddply(EL3,HR,nrow)
colnames(EL3a)<-c("to","from","weight")
HR<-c("from","to")
EL3c<-plyr::ddply(EL3,HR,nrow)
View(EL3c)
colnames(EL3a)<-c("from","to","weight")
EL3a<-plyr::ddply(EL3,HR,nrow)
colnames(EL3a)<-c("from","to","weight")
View(EL3a)
library(plyr)
library(ITNr)
library(ITNr)
library(igraph)
library(ITNr)
WDIDataSeries<-WDI::WDI_data
WDICountryInfo<-WDIDataSeries$country
WD<-as.data.frame(WDICountryInfo,stringsAsFactors = FALSE)
View(WD)
library(ITNr)
WDIDataSeries<-WDI::WDI_data
WDICountryInfo<-WDIDataSeries$country
WD<-as.data.frame(WDICountryInfo,stringsAsFactors = FALSE)
View(WD)
write.csv(WD,"WD.csv")
library(ITNr)
